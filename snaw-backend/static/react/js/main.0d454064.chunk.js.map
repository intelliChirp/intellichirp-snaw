{"version":3,"sources":["img/logo_small.png","components/AnalyzeButton.js","components/ApplicationBar.js","App.js","Charts/LineChart.js","Charts/PieChart.js","components/table.js","Results.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","button","color","fontSize","backgroundColor","margin","spacing","paddingLeft","paddingRight","background","UploadButton","classes","htmlFor","to","style","textDecoration","Button","variant","className","Applicationbar","AppBar","position","Toolbar","Typography","title","App","props","fileSelectedHandler","event","state","selectedFile","Array","from","target","files","src","logo","alt","action","method","encType","component","id","aria-describedby","type","multiple","onChange","this","name","display","FormHelperText","Input","React","Component","Example","width","height","stackOffset","top","right","left","bottom","strokeDasharray","dataKey","series","map","s","data","key","stroke","strokeWidth","PureComponent","pie_data","value","COLORS","totals","classification_dict","anthro_total","bio_total","geo_total","non_total","i","length","category","getTotals","none_total","cx","cy","labelLine","outerRadius","fill","label","entry","index","jsfiddleUrl","root","overflowX","table","minWidth","createData","class_name","seconds","percentage","SimpleTable","total_secs","total","getTotalSecs","table_data","toString","percent","Math","floor","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","indices","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","result","$","ajax","url","async","success","response","console","log","error","fileInserted","finalInfoDictionary","spectroImg","get_spectro","get_indices","classification","get_class","Object","keys","push","Results","useState","expanded","setExpanded","Container","fixed","entries","panel","ExpansionPanel","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","CardMedia","image","Grid","container","item","linechart","piechart","onClick","fileNumber","element","document","createElement","file","Blob","JSON","stringify","href","URL","createObjectURL","download","body","appendChild","click","downloadTxtFile","Boolean","window","location","hostname","match","routing","exact","path","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"js/main.0d454064.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo_small.7e1954b4.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    color: 'white',\r\n    fontSize: '1em',\r\n    backgroundColor: '#3f5a14',\r\n    margin: theme.spacing(1),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n    '&:hover': {\r\n      background: '#2e420e',\r\n   },\r\n  },\r\n}));\r\n\r\nexport default function UploadButton() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n        <label htmlFor=\"outlined-button-file\">\r\n        <Link to=\"/results\" style={{ textDecoration: 'none' }}>\r\n          <Button variant=\"contained\" className={classes.button}>\r\n            Analyze Audio\r\n          </Button>\r\n          </Link>\r\n        </label>\r\n    </div>\r\n  );\r\n}","import Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({});\r\n\r\n/* Creates a static Application bar to be featured on the top of each page in the website */\r\nexport default function Applicationbar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position='static' style={{background: '#3f5a14'}}>\r\n            <Toolbar>\r\n                <Typography variant='h6' className={classes.title} color='inherit'>Soundscape Noise Analysis\r\n                    Workbench</Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport logo from './img/logo_small.png';\r\nimport './App.css';\r\nimport AnalyzeButton from './components/AnalyzeButton';\r\nimport ApplicationBar from \"./components/ApplicationBar\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {selectedFile: []}\r\n  }\r\n\r\n  fileSelectedHandler = event => {\r\n    //event.preventDefault();\r\n    this.state.selectedFile = Array.from(event.target.files)\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <ApplicationBar/>\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n          <p>\r\n            <b>Soundscape Noise Analysis Workbench</b>\r\n          </p>\r\n          <br/>\r\n          <form action=\"http://localhost:5000/uploader\" method=\"POST\"\r\n                encType=\"multipart/form-data\">\r\n            {/*<InputLabel htmlFor=\"my-input\">Upload File</InputLabel>*/}\r\n            <label htmlFor='my-input'><Button variant=\"outlined\" color='#3f5a14' component='span'>Upload Audio\r\n              File</Button></label>\r\n            <input id=\"my-input\" aria-describedby=\"my-helper-text\" type='file' multiple={true} onChange={this.fileSelectedHandler} name='file' style={{display: 'none'}}/>\r\n            <FormHelperText id=\"my-helper-text\">\r\n                Drag and drop WAV files here, or click the Upload button to select file/s.\r\n            </FormHelperText>\r\n\r\n            <label htmlFor='my-submit'><Button variant=\"contained\" backgroundColor='#3f5a14'\r\n                                               component='span'>Submit</Button></label>\r\n            <Input id='my-submit' type='submit' style={{display: 'none'}}/>\r\n          </form>\r\n          <br/>\r\n          <AnalyzeButton/>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React, {PureComponent} from 'react';\r\nimport {CartesianGrid, Legend, Line, LineChart, Tooltip, XAxis, YAxis} from 'recharts';\r\n\r\n// TODO:: Dynamically add data to graphs from json request Issue #7\r\n\r\n//MOCk DATA\r\nconst series2 = [\r\n  {\r\n    name: 'Anthrophony',\r\n    color: '#0088FE',\r\n    data: [\r\n      { category: 'chainsaw', time: 0.0 },\r\n      { category: 'bus', time: 0.9892816911710921 },\r\n      { category: 'NO', time: 1.9785633823421842 },\r\n      { category: 'NO', time: 2.9678450735132764 },\r\n      { category: 'NO', time: 3.9571267646843684 },\r\n      { category: 'NO', time: 4.946408455855461 },\r\n      { category: 'NO', time: 5.935690147026553 },\r\n      { category: 'NO', time: 6.924971838197645 },\r\n      { category: 'NO', time: 7.914253529368737 },\r\n      { category: 'NO', time: 8.90353522053983 },\r\n      { category: 'NO', time: 9.892816911710922 },\r\n      { category: 'NO', time: 10.882098602882014 },\r\n      { category: 'NO', time: 11.871380294053106 },\r\n      { category: 'NO', time: 12.860661985224198 },\r\n      { category: 'NO', time: 13.84994367639529 },\r\n      { category: 'NO', time: 14.839225367566382 },\r\n      { category: 'NO', time: 15.828507058737474 },\r\n      { category: 'NO', time: 16.817788749908566 },\r\n      { category: 'NO', time: 17.80707044107966 },\r\n      { category: 'NO', time: 18.79635213225075 },\r\n      { category: 'NO', time: 19.785633823421843 },\r\n      { category: 'NO', time: 20.774915514592934 },\r\n      { category: 'NO', time: 21.764197205764027 },\r\n      { category: 'NO', time: 22.753478896935118 },\r\n      { category: 'NO', time: 23.74276058810621 },\r\n      { category: 'NO', time: 24.7320422792773 },\r\n      { category: 'NO', time: 25.721323970448395 },\r\n      { category: 'NO', time: 26.710605661619486 },\r\n      { category: 'NO', time: 27.69988735279058 },\r\n      { category: 'NO', time: 28.68916904396167 },\r\n      { category: 'NO', time: 29.678450735132763 },\r\n      { category: 'NO', time: 30.667732426303854 },\r\n      { category: 'NO', time: 31.657014117474947 },\r\n      { category: 'NO', time: 32.64629580864604 },\r\n      { category: 'bus', time: 33.63557749981713 },\r\n      { category: 'bus', time: 34.624859190988225 },\r\n      { category: 'bus', time: 35.61414088215932 },\r\n      { category: 'NO', time: 36.603422573330405 },\r\n      { category: 'NO', time: 37.5927042645015 },\r\n      { category: 'bus', time: 38.58198595567259 },\r\n      { category: 'bus', time: 39.57126764684369 },\r\n      { category: 'NO', time: 40.56054933801477 },\r\n      { category: 'NO', time: 41.54983102918587 },\r\n      { category: 'NO', time: 42.53911272035696 },\r\n      { category: 'NO', time: 43.528394411528055 },\r\n      { category: 'NO', time: 44.51767610269914 },\r\n      { category: 'NO', time: 45.506957793870235 },\r\n      { category: 'NO', time: 46.49623948504133 },\r\n      { category: 'NO', time: 47.48552117621242 },\r\n      { category: 'NO', time: 48.47480286738352 },\r\n      { category: 'NO', time: 49.4640845585546 },\r\n      { category: 'NO', time: 50.4533662497257 },\r\n      { category: 'NO', time: 51.44264794089679 },\r\n      { category: 'NO', time: 52.431929632067884 },\r\n      { category: 'NO', time: 53.42121132323897 },\r\n      { category: 'NO', time: 54.410493014410065 },\r\n      { category: 'NO', time: 55.39977470558116 },\r\n      { category: 'NO', time: 56.38905639675225 },\r\n      { category: 'NO', time: 57.37833808792334 },\r\n      { category: 'NO', time: 58.36761977909443 },\r\n      { category: 'NO', time: 59.35690147026553 },\r\n      { category: 'helicopter', time: 60.34618316143662 }\r\n    ],\r\n  },\r\n  {\r\n    name: 'Geophony',\r\n    color: '#00C49F',\r\n    data: [\r\n      { category: 'NO', time: 0.0 },\r\n      { category: 'NO', time: 0.9892816911710921 },\r\n      { category: 'NO', time: 1.9785633823421842 },\r\n      { category: 'NO', time: 2.9678450735132764 },\r\n      { category: 'NO', time: 3.9571267646843684 },\r\n      { category: 'NO', time: 4.946408455855461 },\r\n      { category: 'NO', time: 5.935690147026553 },\r\n      { category: 'NO', time: 6.924971838197645 },\r\n      { category: 'NO', time: 7.914253529368737 },\r\n      { category: 'NO', time: 8.90353522053983 },\r\n      { category: 'NO', time: 9.892816911710922 },\r\n      { category: 'NO', time: 10.882098602882014 },\r\n      { category: 'NO', time: 11.871380294053106 },\r\n      { category: 'NO', time: 12.860661985224198 },\r\n      { category: 'NO', time: 13.84994367639529 },\r\n      { category: 'NO', time: 14.839225367566382 },\r\n      { category: 'NO', time: 15.828507058737474 },\r\n      { category: 'NO', time: 16.817788749908566 },\r\n      { category: 'NO', time: 17.80707044107966 },\r\n      { category: 'NO', time: 18.79635213225075 },\r\n      { category: 'NO', time: 19.785633823421843 },\r\n      { category: 'NO', time: 20.774915514592934 },\r\n      { category: 'NO', time: 21.764197205764027 },\r\n      { category: 'NO', time: 22.753478896935118 },\r\n      { category: 'NO', time: 23.74276058810621 },\r\n      { category: 'NO', time: 24.7320422792773 },\r\n      { category: 'NO', time: 25.721323970448395 },\r\n      { category: 'NO', time: 26.710605661619486 },\r\n      { category: 'NO', time: 27.69988735279058 },\r\n      { category: 'NO', time: 28.68916904396167 },\r\n      { category: 'NO', time: 29.678450735132763 },\r\n      { category: 'NO', time: 30.667732426303854 },\r\n      { category: 'NO', time: 31.657014117474947 },\r\n      { category: 'NO', time: 32.64629580864604 },\r\n      { category: 'NO', time: 33.63557749981713 },\r\n      { category: 'NO', time: 34.624859190988225 },\r\n      { category: 'NO', time: 35.61414088215932 },\r\n      { category: 'NO', time: 36.603422573330405 },\r\n      { category: 'NO', time: 37.5927042645015 },\r\n      { category: 'NO', time: 38.58198595567259 },\r\n      { category: 'NO', time: 39.57126764684369 },\r\n      { category: 'NO', time: 40.56054933801477 },\r\n      { category: 'NO', time: 41.54983102918587 },\r\n      { category: 'NO', time: 42.53911272035696 },\r\n      { category: 'NO', time: 43.528394411528055 },\r\n      { category: 'NO', time: 44.51767610269914 },\r\n      { category: 'NO', time: 45.506957793870235 },\r\n      { category: 'NO', time: 46.49623948504133 },\r\n      { category: 'NO', time: 47.48552117621242 },\r\n      { category: 'NO', time: 48.47480286738352 },\r\n      { category: 'NO', time: 49.4640845585546 },\r\n      { category: 'NO', time: 50.4533662497257 },\r\n      { category: 'NO', time: 51.44264794089679 },\r\n      { category: 'NO', time: 52.431929632067884 },\r\n      { category: 'NO', time: 53.42121132323897 },\r\n      { category: 'NO', time: 54.410493014410065 },\r\n      { category: 'NO', time: 55.39977470558116 },\r\n      { category: 'NO', time: 56.38905639675225 },\r\n      { category: 'NO', time: 57.37833808792334 },\r\n      { category: 'NO', time: 58.36761977909443 },\r\n      { category: 'NO', time: 59.35690147026553 },\r\n      { category: 'NO', time: 60.34618316143662 }\r\n    ],\r\n  },\r\n  {\r\n    name: 'Biophony',\r\n    color: '#FFBB28',\r\n    data: [\r\n      { category: 'NO', time: 0.0 },\r\n      { category: 'chirping_birds', time: 0.9892816911710921 },\r\n      { category: 'chirping_birds', time: 1.9785633823421842 },\r\n      { category: 'chirping_birds', time: 2.9678450735132764 },\r\n      { category: 'chirping_birds', time: 3.9571267646843684 },\r\n      { category: 'chirping_birds', time: 4.946408455855461 },\r\n      { category: 'chirping_birds', time: 5.935690147026553 },\r\n      { category: 'NO', time: 6.924971838197645 },\r\n      { category: 'NO', time: 7.914253529368737 },\r\n      { category: 'NO', time: 8.90353522053983 },\r\n      { category: 'NO', time: 9.892816911710922 },\r\n      { category: 'NO', time: 10.882098602882014 },\r\n      { category: 'crickets', time: 11.871380294053106 },\r\n      { category: 'crickets', time: 12.860661985224198 },\r\n      { category: 'chirping_birds', time: 13.84994367639529 },\r\n      { category: 'chirping_birds', time: 14.839225367566382 },\r\n      { category: 'chirping_birds', time: 15.828507058737474 },\r\n      { category: 'NO', time: 16.817788749908566 },\r\n      { category: 'NO', time: 17.80707044107966 },\r\n      { category: 'NO', time: 18.79635213225075 },\r\n      { category: 'NO', time: 19.785633823421843 },\r\n      { category: 'NO', time: 20.774915514592934 },\r\n      { category: 'NO', time: 21.764197205764027 },\r\n      { category: 'crickets', time: 22.753478896935118 },\r\n      { category: 'crickets', time: 23.74276058810621 },\r\n      { category: 'crickets', time: 24.7320422792773 },\r\n      { category: 'chirping_birds', time: 25.721323970448395 },\r\n      { category: 'chirping_birds', time: 26.710605661619486 },\r\n      { category: 'chirping_birds', time: 27.69988735279058 },\r\n      { category: 'chirping_birds', time: 28.68916904396167 },\r\n      { category: 'chirping_birds', time: 29.678450735132763 },\r\n      { category: 'NO', time: 30.667732426303854 },\r\n      { category: 'NO', time: 31.657014117474947 },\r\n      { category: 'chirping_birds', time: 32.64629580864604 },\r\n      { category: 'crickets', time: 33.63557749981713 },\r\n      { category: 'crickets', time: 34.624859190988225 },\r\n      { category: 'crickets', time: 35.61414088215932 },\r\n      { category: 'crickets', time: 36.603422573330405 },\r\n      { category: 'chirping_birds', time: 37.5927042645015 },\r\n      { category: 'chirping_birds', time: 38.58198595567259 },\r\n      { category: 'chirping_birds', time: 39.57126764684369 },\r\n      { category: 'chirping_birds', time: 40.56054933801477 },\r\n      { category: 'chirping_birds', time: 41.54983102918587 },\r\n      { category: 'NO', time: 42.53911272035696 },\r\n      { category: 'NO', time: 43.528394411528055 },\r\n      { category: 'NO', time: 44.51767610269914 },\r\n      { category: 'NO', time: 45.506957793870235 },\r\n      { category: 'NO', time: 46.49623948504133 },\r\n      { category: 'NO', time: 47.48552117621242 },\r\n      { category: 'NO', time: 48.47480286738352 },\r\n      { category: 'crickets', time: 49.4640845585546 },\r\n      { category: 'crickets', time: 50.4533662497257 },\r\n      { category: 'chirping_birds', time: 51.44264794089679 },\r\n      { category: 'NO', time: 52.431929632067884 },\r\n      { category: 'NO', time: 53.42121132323897 },\r\n      { category: 'NO', time: 54.410493014410065 },\r\n      { category: 'chirping_birds', time: 55.39977470558116 },\r\n      { category: 'chirping_birds', time: 56.38905639675225 },\r\n      { category: 'NO', time: 57.37833808792334 },\r\n      { category: 'NO', time: 58.36761977909443 },\r\n      { category: 'NO', time: 59.35690147026553 },\r\n      { category: 'NO', time: 60.34618316143662 }\r\n    ],\r\n  },\r\n];\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nexport default class Example extends PureComponent {\r\n  render() { return (\r\n      <LineChart\r\n        width={600}\r\n        height={400}\r\n        stackOffset=\"expand\"\r\n        margin={{\r\n          top: 10, right: 30, left: 0, bottom: 0,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"time\" type='number'/>\r\n        <YAxis dataKey=\"category\" type='category'/>\r\n        <Legend />\r\n        <Tooltip />\r\n        {this.props.series.map( s => (\r\n            <Line dataKey='category' data={s.data} name={s.name} key={s.name} stroke={s.color} type='step' strokeWidth='3'/>\r\n        ))}\r\n      </LineChart>\r\n    );\r\n  }\r\n}\r\n","import React, {PureComponent} from 'react';\r\n\r\nimport {Cell, Legend, Pie, PieChart, Tooltip,} from 'recharts';\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\n// TODO:: Dynamically add data to graphs from json request Issue #7\r\n\r\n//MOCK DATA\r\nconst data01 = [\r\n  { name: 'Geophony', value: 0 },\r\n  { name: 'Biophony', value: 34 },\r\n  { name: 'Anthrophony', value: 12 },\r\n    { name: 'None', value: 68 }\r\n];\r\n\r\n//MOCK DATA\r\nconst series = [\r\n    {\r\n        name: 'Anthrophony',\r\n        color: '#0088FE',\r\n        data: [\r\n            { category: 'chainsaw', time: 0.0 },\r\n            { category: 'bus', time: 0.9892816911710921 },\r\n            { category: 'NO', time: 1.9785633823421842 },\r\n            { category: 'NO', time: 2.9678450735132764 },\r\n            { category: 'NO', time: 3.9571267646843684 },\r\n            { category: 'NO', time: 4.946408455855461 },\r\n            { category: 'NO', time: 5.935690147026553 },\r\n            { category: 'NO', time: 6.924971838197645 },\r\n            { category: 'NO', time: 7.914253529368737 },\r\n            { category: 'NO', time: 8.90353522053983 },\r\n            { category: 'NO', time: 9.892816911710922 },\r\n            { category: 'NO', time: 10.882098602882014 },\r\n            { category: 'NO', time: 11.871380294053106 },\r\n            { category: 'NO', time: 12.860661985224198 },\r\n            { category: 'NO', time: 13.84994367639529 },\r\n            { category: 'NO', time: 14.839225367566382 },\r\n            { category: 'NO', time: 15.828507058737474 },\r\n            { category: 'NO', time: 16.817788749908566 },\r\n            { category: 'NO', time: 17.80707044107966 },\r\n            { category: 'NO', time: 18.79635213225075 },\r\n            { category: 'NO', time: 19.785633823421843 },\r\n            { category: 'NO', time: 20.774915514592934 },\r\n            { category: 'NO', time: 21.764197205764027 },\r\n            { category: 'NO', time: 22.753478896935118 },\r\n            { category: 'NO', time: 23.74276058810621 },\r\n            { category: 'NO', time: 24.7320422792773 },\r\n            { category: 'NO', time: 25.721323970448395 },\r\n            { category: 'NO', time: 26.710605661619486 },\r\n            { category: 'NO', time: 27.69988735279058 },\r\n            { category: 'NO', time: 28.68916904396167 },\r\n            { category: 'NO', time: 29.678450735132763 },\r\n            { category: 'NO', time: 30.667732426303854 },\r\n            { category: 'NO', time: 31.657014117474947 },\r\n            { category: 'NO', time: 32.64629580864604 },\r\n            { category: 'bus', time: 33.63557749981713 },\r\n            { category: 'bus', time: 34.624859190988225 },\r\n            { category: 'bus', time: 35.61414088215932 },\r\n            { category: 'NO', time: 36.603422573330405 },\r\n            { category: 'NO', time: 37.5927042645015 },\r\n            { category: 'bus', time: 38.58198595567259 },\r\n            { category: 'bus', time: 39.57126764684369 },\r\n            { category: 'NO', time: 40.56054933801477 },\r\n            { category: 'NO', time: 41.54983102918587 },\r\n            { category: 'NO', time: 42.53911272035696 },\r\n            { category: 'NO', time: 43.528394411528055 },\r\n            { category: 'NO', time: 44.51767610269914 },\r\n            { category: 'NO', time: 45.506957793870235 },\r\n            { category: 'NO', time: 46.49623948504133 },\r\n            { category: 'NO', time: 47.48552117621242 },\r\n            { category: 'NO', time: 48.47480286738352 },\r\n            { category: 'NO', time: 49.4640845585546 },\r\n            { category: 'NO', time: 50.4533662497257 },\r\n            { category: 'NO', time: 51.44264794089679 },\r\n            { category: 'NO', time: 52.431929632067884 },\r\n            { category: 'NO', time: 53.42121132323897 },\r\n            { category: 'NO', time: 54.410493014410065 },\r\n            { category: 'NO', time: 55.39977470558116 },\r\n            { category: 'NO', time: 56.38905639675225 },\r\n            { category: 'NO', time: 57.37833808792334 },\r\n            { category: 'NO', time: 58.36761977909443 },\r\n            { category: 'NO', time: 59.35690147026553 },\r\n            { category: 'helicopter', time: 60.34618316143662 }\r\n        ],\r\n    },\r\n    {\r\n        name: 'Geophony',\r\n        color: '#00C49F',\r\n        data: [\r\n            { category: 'NO', time: 0.0 },\r\n            { category: 'NO', time: 0.9892816911710921 },\r\n            { category: 'NO', time: 1.9785633823421842 },\r\n            { category: 'NO', time: 2.9678450735132764 },\r\n            { category: 'NO', time: 3.9571267646843684 },\r\n            { category: 'NO', time: 4.946408455855461 },\r\n            { category: 'NO', time: 5.935690147026553 },\r\n            { category: 'NO', time: 6.924971838197645 },\r\n            { category: 'NO', time: 7.914253529368737 },\r\n            { category: 'NO', time: 8.90353522053983 },\r\n            { category: 'NO', time: 9.892816911710922 },\r\n            { category: 'NO', time: 10.882098602882014 },\r\n            { category: 'NO', time: 11.871380294053106 },\r\n            { category: 'NO', time: 12.860661985224198 },\r\n            { category: 'NO', time: 13.84994367639529 },\r\n            { category: 'NO', time: 14.839225367566382 },\r\n            { category: 'NO', time: 15.828507058737474 },\r\n            { category: 'NO', time: 16.817788749908566 },\r\n            { category: 'NO', time: 17.80707044107966 },\r\n            { category: 'NO', time: 18.79635213225075 },\r\n            { category: 'NO', time: 19.785633823421843 },\r\n            { category: 'NO', time: 20.774915514592934 },\r\n            { category: 'NO', time: 21.764197205764027 },\r\n            { category: 'NO', time: 22.753478896935118 },\r\n            { category: 'NO', time: 23.74276058810621 },\r\n            { category: 'NO', time: 24.7320422792773 },\r\n            { category: 'NO', time: 25.721323970448395 },\r\n            { category: 'NO', time: 26.710605661619486 },\r\n            { category: 'NO', time: 27.69988735279058 },\r\n            { category: 'NO', time: 28.68916904396167 },\r\n            { category: 'NO', time: 29.678450735132763 },\r\n            { category: 'NO', time: 30.667732426303854 },\r\n            { category: 'NO', time: 31.657014117474947 },\r\n            { category: 'NO', time: 32.64629580864604 },\r\n            { category: 'NO', time: 33.63557749981713 },\r\n            { category: 'NO', time: 34.624859190988225 },\r\n            { category: 'NO', time: 35.61414088215932 },\r\n            { category: 'NO', time: 36.603422573330405 },\r\n            { category: 'NO', time: 37.5927042645015 },\r\n            { category: 'NO', time: 38.58198595567259 },\r\n            { category: 'NO', time: 39.57126764684369 },\r\n            { category: 'NO', time: 40.56054933801477 },\r\n            { category: 'NO', time: 41.54983102918587 },\r\n            { category: 'NO', time: 42.53911272035696 },\r\n            { category: 'NO', time: 43.528394411528055 },\r\n            { category: 'NO', time: 44.51767610269914 },\r\n            { category: 'NO', time: 45.506957793870235 },\r\n            { category: 'NO', time: 46.49623948504133 },\r\n            { category: 'NO', time: 47.48552117621242 },\r\n            { category: 'NO', time: 48.47480286738352 },\r\n            { category: 'NO', time: 49.4640845585546 },\r\n            { category: 'NO', time: 50.4533662497257 },\r\n            { category: 'NO', time: 51.44264794089679 },\r\n            { category: 'NO', time: 52.431929632067884 },\r\n            { category: 'NO', time: 53.42121132323897 },\r\n            { category: 'NO', time: 54.410493014410065 },\r\n            { category: 'NO', time: 55.39977470558116 },\r\n            { category: 'NO', time: 56.38905639675225 },\r\n            { category: 'NO', time: 57.37833808792334 },\r\n            { category: 'NO', time: 58.36761977909443 },\r\n            { category: 'NO', time: 59.35690147026553 },\r\n            { category: 'NO', time: 60.34618316143662 }\r\n        ],\r\n    },\r\n    {\r\n        name: 'Biophony',\r\n        color: '#FFBB28',\r\n        data: [\r\n            { category: 'NO', time: 0.0 },\r\n            { category: 'chirping_birds', time: 0.9892816911710921 },\r\n            { category: 'chirping_birds', time: 1.9785633823421842 },\r\n            { category: 'chirping_birds', time: 2.9678450735132764 },\r\n            { category: 'chirping_birds', time: 3.9571267646843684 },\r\n            { category: 'chirping_birds', time: 4.946408455855461 },\r\n            { category: 'chirping_birds', time: 5.935690147026553 },\r\n            { category: 'NO', time: 6.924971838197645 },\r\n            { category: 'NO', time: 7.914253529368737 },\r\n            { category: 'NO', time: 8.90353522053983 },\r\n            { category: 'NO', time: 9.892816911710922 },\r\n            { category: 'NO', time: 10.882098602882014 },\r\n            { category: 'crickets', time: 11.871380294053106 },\r\n            { category: 'crickets', time: 12.860661985224198 },\r\n            { category: 'chirping_birds', time: 13.84994367639529 },\r\n            { category: 'chirping_birds', time: 14.839225367566382 },\r\n            { category: 'chirping_birds', time: 15.828507058737474 },\r\n            { category: 'NO', time: 16.817788749908566 },\r\n            { category: 'NO', time: 17.80707044107966 },\r\n            { category: 'NO', time: 18.79635213225075 },\r\n            { category: 'NO', time: 19.785633823421843 },\r\n            { category: 'NO', time: 20.774915514592934 },\r\n            { category: 'NO', time: 21.764197205764027 },\r\n            { category: 'crickets', time: 22.753478896935118 },\r\n            { category: 'crickets', time: 23.74276058810621 },\r\n            { category: 'crickets', time: 24.7320422792773 },\r\n            { category: 'chirping_birds', time: 25.721323970448395 },\r\n            { category: 'chirping_birds', time: 26.710605661619486 },\r\n            { category: 'chirping_birds', time: 27.69988735279058 },\r\n            { category: 'chirping_birds', time: 28.68916904396167 },\r\n            { category: 'chirping_birds', time: 29.678450735132763 },\r\n            { category: 'NO', time: 30.667732426303854 },\r\n            { category: 'NO', time: 31.657014117474947 },\r\n            { category: 'chirping_birds', time: 32.64629580864604 },\r\n            { category: 'crickets', time: 33.63557749981713 },\r\n            { category: 'crickets', time: 34.624859190988225 },\r\n            { category: 'crickets', time: 35.61414088215932 },\r\n            { category: 'crickets', time: 36.603422573330405 },\r\n            { category: 'chirping_birds', time: 37.5927042645015 },\r\n            { category: 'chirping_birds', time: 38.58198595567259 },\r\n            { category: 'chirping_birds', time: 39.57126764684369 },\r\n            { category: 'chirping_birds', time: 40.56054933801477 },\r\n            { category: 'chirping_birds', time: 41.54983102918587 },\r\n            { category: 'NO', time: 42.53911272035696 },\r\n            { category: 'NO', time: 43.528394411528055 },\r\n            { category: 'NO', time: 44.51767610269914 },\r\n            { category: 'NO', time: 45.506957793870235 },\r\n            { category: 'NO', time: 46.49623948504133 },\r\n            { category: 'NO', time: 47.48552117621242 },\r\n            { category: 'NO', time: 48.47480286738352 },\r\n            { category: 'crickets', time: 49.4640845585546 },\r\n            { category: 'crickets', time: 50.4533662497257 },\r\n            { category: 'chirping_birds', time: 51.44264794089679 },\r\n            { category: 'NO', time: 52.431929632067884 },\r\n            { category: 'NO', time: 53.42121132323897 },\r\n            { category: 'NO', time: 54.410493014410065 },\r\n            { category: 'chirping_birds', time: 55.39977470558116 },\r\n            { category: 'chirping_birds', time: 56.38905639675225 },\r\n            { category: 'NO', time: 57.37833808792334 },\r\n            { category: 'NO', time: 58.36761977909443 },\r\n            { category: 'NO', time: 59.35690147026553 },\r\n            { category: 'NO', time: 60.34618316143662 }\r\n        ],\r\n    },\r\n];\r\n\r\nfunction getTotals(classification_dict) {\r\n    var anthro_total = 0;\r\n    var bio_total = 0;\r\n    var geo_total = 0;\r\n    var non_total = 0;\r\n    for(var i=0; i < classification_dict[0].data.length; i++) {\r\n        if(classification_dict[0].data[i].category === \"NO\" &&\r\n            classification_dict[1].data[i].category === \"NO\" &&\r\n            classification_dict[2].data[i].category === \"NO\" ) {\r\n            non_total += 1\r\n        }\r\n        else if(classification_dict[0].data[i].category !== \"NO\") {\r\n            anthro_total += 1\r\n        }\r\n        if(classification_dict[1].data[i].category !== \"NO\") {\r\n            bio_total += 1\r\n        }\r\n        if(classification_dict[2].data[i].category !== \"NO\") {\r\n            geo_total += 1\r\n        }\r\n    }\r\n    return [anthro_total, bio_total, geo_total, non_total]\r\n}\r\n\r\nvar anthro_total = 0;\r\nvar bio_total = 0;\r\nvar geo_total = 0;\r\nvar pie_data = [\r\n    { name : 'Anthrophony', value : anthro_total },\r\n    { name : 'Biophony', value : bio_total },\r\n    { name : 'Geophony', value : geo_total }\r\n];\r\n\r\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n\r\nexport default class Example extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/k9jkog04/';\r\n\r\n  render() {\r\n\r\n      var totals = getTotals( this.props.series );\r\n      var anthro_total = totals[0];\r\n      var bio_total = totals[1];\r\n      var geo_total = totals[2];\r\n      var none_total = totals[3];\r\n\r\n    pie_data = [\r\n      { name : 'Anthrophony', value : anthro_total },\r\n      { name : 'Biophony', value : bio_total },\r\n      { name : 'Geophony', value : geo_total },\r\n        { name : 'None', value : none_total }\r\n      ];\r\n\r\n    return (\r\n      <PieChart width={400} height={400}>\r\n        <Pie\r\n          data={pie_data}\r\n          cx={200}\r\n          cy={200}\r\n          labelLine={false}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n          label\r\n        >\r\n          {\r\n            pie_data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n          }\r\n        </Pie>\r\n        <Tooltip/>\r\n        <Legend/>\r\n      </PieChart>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\n/* TODO:: Finish displaying every type of data needed for the user Issue #15\r\n   TODO:: Dynamically add rows and data from classification results and acoustic indices results Issue #16\r\n*/\r\n\r\nfunction createData(class_name, seconds, percentage) {\r\n  return { class_name, seconds, percentage };\r\n}\r\n\r\n// MOCK DATA\r\nconst rows = [\r\n  createData('Geophony', 14, 45),\r\n  createData('Biophony', 12, 45),\r\n  createData('Anthrophony', 4, 10),\r\n];\r\n\r\nconst rows2 = [\r\n  {\"class_name\" : \"Geophony\", \"seconds\" : 14, \"percentage\" : 45}\r\n];\r\n\r\nfunction getTotals(classification_dict) {\r\n  var anthro_total = 0;\r\n  var bio_total = 0;\r\n  var geo_total = 0;\r\n  var non_total = 0;\r\n  for(var i=0; i < classification_dict[0].data.length; i++) {\r\n    if(classification_dict[0].data[i].category === \"NO\" &&\r\n        classification_dict[1].data[i].category === \"NO\" &&\r\n        classification_dict[2].data[i].category === \"NO\" ) {\r\n      non_total += 1\r\n    }\r\n    else if(classification_dict[0].data[i].category !== \"NO\") {\r\n      anthro_total += 1\r\n    }\r\n    if(classification_dict[1].data[i].category !== \"NO\") {\r\n      bio_total += 1\r\n    }\r\n    if(classification_dict[2].data[i].category !== \"NO\") {\r\n      geo_total += 1\r\n    }\r\n  }\r\n  return [anthro_total, bio_total, geo_total, non_total]\r\n}\r\n\r\nfunction getTotalSecs(classification_dict) {\r\n  var total = 0;\r\n  classification_dict.map( s => (\r\n      total += 1\r\n  ));\r\n  return total;\r\n}\r\n\r\nexport default function SimpleTable(props) {\r\n  const classes = useStyles();\r\n\r\n  //var anthro_total = getTotals( props.series[0].data ); // Total number of ant classes with non NO categ\r\n  //var bio_total = getTotals( props.series[1].data ); // Total number of bio classes with non NO categ\r\n  //var geo_total = getTotals( props.series[2].data ); // Total number of geo classes with non No categ\r\n\r\n  // eslint-disable-next-line no-undef\r\n  var totals = getTotals( props.series );\r\n  var anthro_total = totals[0];\r\n  var bio_total = totals[1];\r\n  var geo_total = totals[2];\r\n  var none_total = totals[3];\r\n\r\n  var total_secs = getTotalSecs( props.series[0].data ); // Total number of seconds the audio file is\r\n\r\n  // adding data to the table\r\n  var table_data = [\r\n    { name : 'Anthrophony', value : anthro_total.toString() + \"s\",\r\n      percent : (Math.floor((anthro_total / total_secs)*100)).toString() + \"%\" },\r\n    { name : 'Biophony', value : bio_total.toString() + \"s\",\r\n      percent : (Math.floor((bio_total / total_secs)*100)).toString() + \"%\" },\r\n    { name : 'Geophony', value : geo_total.toString() + \"s\",\r\n      percent : (Math.floor((geo_total / total_secs)*100)).toString() + \"%\" },\r\n    { name: 'None', value : none_total.toString() + \"s\",\r\n      percent : (Math.floor((none_total / total_secs)*100)).toString() + \"%\"}\r\n  ];\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell><Typography variant=\"h6\">Classification Type</Typography></TableCell>\r\n            <TableCell align=\"right\"><Typography variant=\"h6\">Seconds</Typography></TableCell>\r\n            <TableCell align=\"right\"><Typography variant=\"h6\">Percentage (%)</Typography></TableCell>\r\n      </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {/* map function on rows list,\r\n              for each row create a result in the table */}\r\n          {table_data.map(row => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.value}</TableCell>\r\n              <TableCell align=\"right\">{row.percent}</TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell><Typography variant=\"h6\">Index Name</Typography></TableCell>\r\n            <TableCell align=\"right\"><Typography variant=\"h6\">Value</Typography></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.indices.map(row => (\r\n              <TableRow key={row.index}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.index}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.value}</TableCell>\r\n              </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, {Component} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LineChart from './Charts/LineChart';\r\nimport PieChart from './Charts/PieChart';\r\nimport SimpleTable from \"./components/table\";\r\nimport ApplicationBar from \"./components/ApplicationBar\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport $ from 'jquery';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n    button: {\r\n        color: 'white',\r\n        fontSize: '1em',\r\n        backgroundColor: '#3f5a14',\r\n        margin: theme.spacing(1),\r\n        paddingLeft: theme.spacing(4),\r\n        paddingRight: theme.spacing(4),\r\n        '&:hover': {\r\n            background: '#2e420e',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\n\r\n/* Function: fileInserted()\r\n * Functionality:\r\n * This function is in place to stop the page from constantly\r\n * running the classification and spectrogram functions.\r\n * It does so by checking if any files are actually present, if\r\n * there are none, the functions will not run. Once those functions\r\n * do run, the files are deleted.\r\n */\r\nfunction fileInserted(){\r\n    var result = '';\r\n    $.ajax({\r\n        url: '/didUpload',\r\n        type: \"GET\",\r\n        async: false,\r\n        success: function(response){\r\n            console.log(response);\r\n            result = response;\r\n        },\r\n        error: function(error){\r\n            console.log(error);\r\n        },\r\n    });\r\n    return result;\r\n}\r\n/* Func: get_spectro()\r\n   When the function is called, an ajax call is made to /results/spectro\r\n   flask function returns a file location of a created spectrogram file based on audio file uploaded\r\n   spectro_load set to true, allows function to only be loaded on results.js creation, not update\r\n   ajax response is returned to the function\r\n*/\r\nfunction get_spectro(){\r\n    var result = '';\r\n    $.ajax({\r\n        url: '/results/spectro',\r\n        type: \"GET\",\r\n        async: false,\r\n        success: function(response){\r\n        //console.log(response);\r\n        result = response;\r\n        },\r\n        error: function(error){\r\n        console.log(error);\r\n        },\r\n    });\r\n    return result;\r\n}\r\n\r\n/* Func: get_class()\r\n   When the function is called, an ajax call is made to /results/classification\r\n   flask function returns a JSON string featuring a dictionary of time stamps and classification\r\n   based on the audio file uploaded\r\n   spectro_load set to true, allows function to only be loaded on results.js creation, not update\r\n   ajax response is returned to the function\r\n*/\r\nfunction get_class(){\r\n    var result = '';\r\n    $.ajax({\r\n        url: '/results/classification',\r\n        type: 'GET',\r\n        async: false,\r\n        success: function(response){\r\n            //console.log(response);\r\n            result = response;\r\n        },\r\n        error: function(error){\r\n            console.log(error);\r\n        },\r\n    });\r\n    return result\r\n}\r\n\r\n/* Func: get_class()\r\n   When the function is called, an ajax call is made to /results/classification\r\n   flask function returns a JSON string featuring a dictionary of time stamps and classification\r\n   based on the audio file uploaded\r\n   spectro_load set to true, allows function to only be loaded on results.js creation, not update\r\n   ajax response is returned to the function\r\n*/\r\nfunction get_indices(){\r\n    var result = '';\r\n    $.ajax({\r\n        url: '/results/indices',\r\n        type: 'GET',\r\n        async: false,\r\n        success: function(response){\r\n            //console.log(response);\r\n            result = response;\r\n        },\r\n        error: function(error){\r\n            console.log(error);\r\n        },\r\n    });\r\n    return result\r\n}\r\n\r\n/* func: downloadTxtFile\r\n   creates a txt file with a classification result when export button is pressed\r\n   TODO:: Pretty print classification results in the returned export file Issue #13\r\n   TODO:: Save classification results to a csv. file Issue #14\r\n */\r\nfunction downloadTxtFile(fileNumber){\r\n    const element = document.createElement(\"a\");\r\n\r\n    /* Proper values to traverse the finalInfoDictionary:\r\n     * fileNumber (passed in parameter) =  the number of the file in the dictionary. Dynamically called by Results().\r\n     * fileName = The name of the file\r\n     * fileSpectro = The Base64 of the Spectrogram image\r\n     * fileData =  The classification.py output of the file\r\n     *\r\n     * Example of the dictionary:  {fileNumber: [fileName, fileSpectro, fileData]}\r\n     */\r\n    let fileName = 0;\r\n    let fileSpectro = 1;\r\n    let fileData = 2;\r\n\r\n    const file = new Blob([JSON.stringify(finalInfoDictionary[fileNumber][fileData])], {type: 'text/plain'});\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"classification_\"+finalInfoDictionary[fileNumber][fileName]+\"_results.txt\";\r\n    document.body.appendChild(element); // Required for this to work in FireFox\r\n    element.click();\r\n}\r\n\r\n/*\r\n * Here we are checking the above function fileInserted,\r\n * which will tell us if there are files present, if not\r\n * the get_spectro and get_class will not run\r\n */\r\nif(fileInserted() == \"True\") {\r\n\r\n    // Create a final dictionary to store all information about each file\r\n    var finalInfoDictionary\r\n    // Run spectrogram conversion\r\n    var spectroImg = get_spectro();\r\n    var indices = get_indices();\r\n    var classification = get_class();\r\n\r\n    finalInfoDictionary = spectroImg;\r\n    // Run classification function. returns dictionary. Will delete all upload files upon completion\r\n\r\n\r\n    //Put everything together into one dictionary for dynamic adding.\r\n    for(var i = 0; i < Object.keys(spectroImg).length; i++){\r\n        finalInfoDictionary[i].push(classification[i]);\r\n    }\r\n    console.log(finalInfoDictionary);\r\n}\r\n\r\n\r\n\r\nfunction Results() {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <ApplicationBar/>\r\n            <Container>\r\n                <br/>\r\n                <Typography variant=\"h3\" component=\"h1\">Results of Analysis</Typography>\r\n                <br/>\r\n                <Container fixed>\r\n                    {Object.entries(finalInfoDictionary).map(([key, value]) => {\r\n                        console.log(key);\r\n                        return (\r\n                            <ExpansionPanel expanded={expanded === key} onChange={handleChange(key)}>\r\n                                <ExpansionPanelSummary\r\n                                    expandIcon={<ExpandMoreIcon/>}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id=\"panel1bh-header\">\r\n                                    <Typography className={classes.heading}>Results of</Typography>\r\n                                    <Typography className={classes.secondaryHeading}>{value[0]}</Typography>\r\n                                </ExpansionPanelSummary>\r\n                                <ExpansionPanelDetails>\r\n                                    <Container>\r\n                                        <Paper>\r\n                                            <Typography variant='subtitle1'>Spectrogram</Typography>\r\n                                            <CardMedia id=\"spectrogram\" component='img' image={value[1]}\r\n                                                       className=\"classes.media\"/>\r\n                                        </Paper>\r\n                                        <br/>\r\n                                        <Typography variant='subtitle1'>Results of SVM Anthrophony, Geophony, and Biophony Class\r\n                                            Models</Typography>\r\n                                        <br/>\r\n                                        <Grid container spacing={2}>\r\n                                            <Grid item linechart>\r\n                                                <Paper><LineChart series={value[2]}/></Paper>\r\n                                            </Grid>\r\n                                            <Grid item piechart>\r\n                                                <Paper><PieChart series={value[2]}/></Paper>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <br/>\r\n                                        <SimpleTable series={value[2]} indices={indices[0]}/>\r\n                                        <br/>\r\n                                        <Paper>\r\n                                            <Button onClick={function () {\r\n                                                downloadTxtFile(key)\r\n                                            }} variant=\"contained\" className={classes.button}>Export SVM Classification</Button>\r\n                                        </Paper>\r\n                                    </Container>\r\n                                </ExpansionPanelDetails>\r\n                            </ExpansionPanel>\r\n                            )})}\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n            )\r\n        }\r\n\r\nexport default Results;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Results from './Results';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst routing = (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route exact path=\"/results\" component={Results} />\r\n      </div>\r\n    </Router>\r\n  )\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}